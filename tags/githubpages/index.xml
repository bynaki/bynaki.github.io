<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>githubpages on Paran.Blue</title>
    <link>https://bynaki.github.io/tags/githubpages/</link>
    <description>Recent content in githubpages on Paran.Blue</description>
    <image>
      <url>https://bynaki.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://bynaki.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 18 Jul 2021 23:35:55 +0900</lastBuildDate><atom:link href="https://bynaki.github.io/tags/githubpages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS :: How to deploy GitHub pages with AWS Route 53 registered custom domain and force HTTPS</title>
      <link>https://bynaki.github.io/posts/aws.route53-github/</link>
      <pubDate>Sun, 18 Jul 2021 23:35:55 +0900</pubDate>
      
      <guid>https://bynaki.github.io/posts/aws.route53-github/</guid>
      <description>In this guide I will explain how to deploy a website to GitHub pages forcing HTTPS over a custom domain that is registered with AWS Route 53. We will set up our domain so that the www subdomain will redirect to the apex domain.
Summary  Set up the GitHub repo Commit and push an index.html or use Jekyll Configure AWS Route 53  Step 1: Create GitHub repo and turn on GitHub Pages  If it does not exist yet, create a repository using the naming pattern your-github-username.</description>
    </item>
    
  </channel>
</rss>
