<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>await on Paran.Blue</title>
    <link>https://bynaki.github.io/tags/await/</link>
    <description>Recent content in await on Paran.Blue</description>
    <image>
      <url>https://bynaki.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://bynaki.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 16 Aug 2021 19:58:31 +0900</lastBuildDate><atom:link href="https://bynaki.github.io/tags/await/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Js :: async/await Catch Error</title>
      <link>https://bynaki.github.io/posts/js.async-await-catch-error/</link>
      <pubDate>Mon, 16 Aug 2021 19:58:31 +0900</pubDate>
      
      <guid>https://bynaki.github.io/posts/js.async-await-catch-error/</guid>
      <description>async function을 바로 return하면 error를 catch 하지 못한다.
let count = 0 function asyncFunc() { return new Promise((resolve, reject) =&amp;gt; { if(count % 10 === 0) { count++ reject(new Error(&amp;#39;error!!&amp;#39;)) return } resolve(++count) }) } async function bad() { try { // await 하지 않고 바로 리턴하면 에러를 캣치하지 못한다.  return asyncFunc() } catch(e) { console.log(e.message) return asyncFunc() } } async function right() { try { const res = await asyncFunc() return res } catch(e) { console.</description>
    </item>
    
  </channel>
</rss>
