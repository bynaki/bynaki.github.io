<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Paran.Blue</title>
    <link>https://bynaki.github.io/posts/</link>
    <description>Recent content in Posts on Paran.Blue</description>
    <image>
      <url>https://bynaki.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://bynaki.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 15 Jul 2021 23:38:46 +0900</lastBuildDate><atom:link href="https://bynaki.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSS :: Web Font (@font-face)</title>
      <link>https://bynaki.github.io/posts/css.font-face/</link>
      <pubDate>Thu, 15 Jul 2021 23:38:46 +0900</pubDate>
      
      <guid>https://bynaki.github.io/posts/css.font-face/</guid>
      <description>웹 폰트 또한 font-family 속성을 사용하지만, @font-face 지시어(directive)라는 CSS 명령어를 사용해서 웹 브라우저에게 해당 서체를 다운로드할 것을 알리면서 사용할 수 있습니다.
웹 폰트를 위해 사용하는 CSS 코드는 매우 간단하며, 두 개의 CSS 명령어만이 필요합니다.
 @font-face 지시어는 웹 브라우저에게 서체 이름과 다운받을 위치를 알려줍니다. 이 명령어의 동작 방식은 뒤에서 살펴봅니다. font-family 속성의 사용법은 위에서 언급한 일반 폰트의 사용법과 같습니다. 일단 @font-face 를 사용해 브라우저에게 서체를 다운받으라 알린 다음에는, 어느 CSS에서도 일반 폰트와 동일하게 font-family를 통해 사용할 수 있게 됩니다.</description>
    </item>
    
    <item>
      <title>Hammerspoon</title>
      <link>https://bynaki.github.io/posts/hammerspoon/</link>
      <pubDate>Wed, 14 Jul 2021 19:52:16 +0900</pubDate>
      
      <guid>https://bynaki.github.io/posts/hammerspoon/</guid>
      <description>hammerspoon은 macOS에서만 돌아가는 자동화 툴이다. Lua를 내장하고 있다. 마음에 든다.  What is Hammerspoon? This is a tool for powerful automation of OS X. At its core, Hammerspoon is just a bridge between the operating system and a Lua scripting engine.
What gives Hammerspoon its power is a set of extensions that expose specific pieces of system functionality, to the user. With these, you can write Lua scripts to control many aspects of your OS X environment.</description>
    </item>
    
    <item>
      <title>Hugo :: Quick Start</title>
      <link>https://bynaki.github.io/posts/hugo.quick-start/</link>
      <pubDate>Tue, 13 Jul 2021 23:25:02 +0900</pubDate>
      
      <guid>https://bynaki.github.io/posts/hugo.quick-start/</guid>
      <description>Create a Hugo site using the beautiful Ananke theme.
 This quick start uses macOS in the examples. For instructions about how to install Hugo on other operating systems, see install.
It is recommended to have Git installed to run this tutorial.
For other approaches learning Hugo like book or a video tutorial refer to the external learning resources page.
 Step 1: Install Hugo  Homebrew and MacPorts, package managers for macOS, can be installed from brew.</description>
    </item>
    
    <item>
      <title>Markdown :: Syntax</title>
      <link>https://bynaki.github.io/posts/markdown.syntax/</link>
      <pubDate>Tue, 13 Jul 2021 22:58:56 +0900</pubDate>
      
      <guid>https://bynaki.github.io/posts/markdown.syntax/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Git :: Submodule</title>
      <link>https://bynaki.github.io/posts/git.submodule/</link>
      <pubDate>Tue, 13 Jul 2021 22:02:06 +0900</pubDate>
      
      <guid>https://bynaki.github.io/posts/git.submodule/</guid>
      <description>About submodule.
Add Submodule 서브모듈 추가 하기
$ git submodule add https://github.com/chaconinc/DbConnector 기본적으로 서브모듈은 프로젝트 저장소의 이름으로 디렉토리를 만든다. 예제에서는 DbConnector라는 이름으로 만든다. 명령의 마지막에 원하는 이름을 넣어 다른 디렉토리 이름으로 서브모듈을 추가할 수도 있다. 우선 .gitmodules 파일이 만들어졌다. 이 파일은 서브디렉토리와 하위 프로젝트 URL의 매핑 정보를 담은 설정파일이다.
[submodule &amp;quot;DbConnector&amp;quot;] path = DbConnector url = https://github.com/chaconinc/DbConnector Submodule 포함한 프로젝트 Clone 서브모듈을 포함하는 프로젝트를 Clone 하는 예제를 살펴본다. 이런 프로젝트를 Clone 하면 기본적으로 서브모듈 디렉토리는 빈 디렉토리이다.</description>
    </item>
    
    <item>
      <title>Ava :: Debugging tests with Visual Studio Code</title>
      <link>https://bynaki.github.io/posts/ava.debugging-vscode/</link>
      <pubDate>Wed, 07 Jul 2021 17:32:43 +0900</pubDate>
      
      <guid>https://bynaki.github.io/posts/ava.debugging-vscode/</guid>
      <description>Debugging tests with Visual Studio Code
You can debug your tests using Visual Studio Code.
Debugging with the debug terminal You can use VS Code&amp;rsquo;s “JavaScript Debug Terminal” to automatically debug AVA run on the command-line.
 From the Command Palette (F1or command + shift + p/ control + shift + p), run Debug: Create JavaScript Debug Terminal Run npx ava in the terminal  Creating a launch configuration Alternatively you can create a launch configuration, which makes it easier to debug individual test files.</description>
    </item>
    
  </channel>
</rss>
